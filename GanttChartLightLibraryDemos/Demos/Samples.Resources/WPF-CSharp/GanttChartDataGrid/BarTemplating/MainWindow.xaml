<Window x:Class="Demos.WPF.CSharp.GanttChartDataGrid.BarTemplating.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hdc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.HierarchicalData.LightWPF.Controls"
        xmlns:pdgcc="clr-namespace:DlhSoft.Windows.Controls;assembly=DlhSoft.ProjectData.GanttChart.LightWPF.Controls"
        xmlns:local="clr-namespace:Demos.WPF.CSharp.GanttChartDataGrid.BarTemplating"
        Title="GanttChartDataGrid Bar Templating Sample" Width="800" Height="600">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="AppResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <pdgcc:GanttChartDataGrid x:Name="GanttChartDataGrid" ItemHeight="30" BarHeight="21" StandardBarCornerRadius="1" IsMouseWheelZoomEnabled="False">
            <pdgcc:GanttChartDataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Margin" Value="0,4.5"/>
                </Style>
            </pdgcc:GanttChartDataGrid.CellStyle>
            <!-- Define the custom bar template for standard tasks. -->
            <pdgcc:GanttChartDataGrid.StandardTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <!-- Display a new estimation bar at the position computed based on custom EstimatedStart property and bar left (Start) origin. -->
                        <Canvas Opacity="0.35">
                            <Grid Canvas.Left="{Binding ComputedEstimatedBarLeft}" Canvas.Top="-4" Width="{Binding ComputedEstimatedBarWidth}" Height="{Binding ComputedBarHeight}">
                                <Rectangle Fill="{Binding Path=(pdgcc:GanttChartView.StandardBarFill)}" StrokeDashArray="1" Stroke="{Binding Path=(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                <Rectangle Margin="1" Stroke="LightCyan" StrokeThickness="1" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                            </Grid>
                        </Canvas>
                        <Grid>
                            <!-- A dashed rectangle can be used to present the task area. -->
                            <Rectangle Stroke="{Binding Path=(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" StrokeDashArray="2" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                            <!-- An items control can be used to display the custom interrupted task bars in the chart. -->
                            <ItemsControl ItemsSource="{Binding ComputedInterruptedBars}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Canvas>
                                            <Grid Canvas.Left="{Binding Left}" Width="{Binding Width}" Height="21">
                                                <!-- Corner radius values are set to a small value to generate less rounded rectangle corners. -->
                                                <Rectangle Fill="{Binding Path=Item.(pdgcc:GanttChartView.StandardBarFill)}" Stroke="{Binding Path=Item.(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="{Binding GanttChartView.StandardBarStrokeThickness}" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                                <!-- Add a light cyan effect rectangle inside the task bar. -->
                                                <Rectangle Margin="1" Stroke="LightCyan" StrokeThickness="1" RadiusX="{Binding GanttChartView.StandardBarCornerRadius}" RadiusY="{Binding GanttChartView.StandardBarCornerRadius}"/>
                                            </Grid>
                                        </Canvas>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <pdgcc:DragTaskThumb Role="UpdateStart" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                            <pdgcc:DragTaskThumb Role="UpdateFinish" Width="2" HorizontalAlignment="Right" Visibility="{Binding GanttChartView.ThumbVisibility}"/>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Margin="3,1">
                            <!-- An image can be used to display the custom icon on the task bar in the chart. -->
                            <Image Grid.Column="0" Source="{Binding Icon}" IsHitTestVisible="False"/>
                            <!-- A text box can be used to display and edit the name of the task on the task bar in the chart. -->
                            <TextBox Grid.Column="1" Text="{Binding Content, Mode=TwoWay}" FontFamily="Arial" FontSize="10" Padding="4" Foreground="White" Background="#80000000" BorderThickness="0"/>
                        </StackPanel>
                        <!-- An items control can be used to display the custom markers over the task bar in the chart. -->
                        <ItemsControl ItemsSource="{Binding Markers}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Canvas>
                                        <Image Canvas.Left="{Binding ComputedLeft}" Source="{Binding Icon}" ToolTipService.ToolTip="{Binding Note}" Height="14" Margin="2"/>
                                    </Canvas>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <!-- A text block can be used to display the custom note under the task bar in the chart. -->
                        <Canvas>
                            <TextBlock Canvas.Top="20" Text="{Binding Note}" FontFamily="Arial" FontStyle="Italic" FontSize="10" Foreground="Gray"/>
                        </Canvas>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.StandardTaskTemplate>
            <!-- Optionally, also define the custom bar template for summary tasks. -->
            <pdgcc:GanttChartDataGrid.SummaryTaskTemplate>
                <DataTemplate>
                    <Grid>
                        <Canvas Margin="-10,0">
                            <Rectangle Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Panel}}"
                                       Height="{Binding VisibleItemCountHeight}"
                                       Fill="{Binding Background}" Opacity="0.1"/>
                        </Canvas>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.2*"/>
                                <RowDefinition Height="0.5*"/>
                                <RowDefinition Height="0.3*"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.Column="1" Grid.Row="1" Fill="{Binding Path=(pdgcc:GanttChartView.SummaryBarFill)}" Stroke="{Binding Path=(pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}"/>
                            <Rectangle Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Width="{Binding ComputedSummaryCompletedBarWidth}" VerticalAlignment="Top" Height="{Binding GanttChartView.CompletedBarHeight}" MaxHeight="4" Fill="{Binding Path=(pdgcc:GanttChartView.SummaryCompletedBarFill)}" Margin="1" Visibility="{Binding GanttChartView.SummaryTaskCompletedEffortVisibility}" IsHitTestVisible="False"/>
                            <Line Grid.Column="1" Grid.Row="2" Stroke="{Binding Path=(pdgcc:GanttChartView.StandardBarStroke)}" StrokeThickness="1" StrokeDashArray="1,1" Y1="1" Y2="1" X1="0" X2="{Binding ComputedBarWidth}" Visibility="{Binding ExpansionVisibility}"/>
                            <Polygon Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Fill="{Binding Path=(pdgcc:GanttChartView.SummaryBarFill)}" Stroke="{Binding Path=(pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}" Width="{Binding GanttChartView.BarHeight}" Stretch="Fill"
                                     Points="0,0 0,0.5 0.5,0.8 1,0.5 1,0"/>
                            <Polygon Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" Fill="{Binding Path=(pdgcc:GanttChartView.SummaryBarFill)}" Stroke="{Binding Path=(pdgcc:GanttChartView.SummaryBarStroke)}" StrokeThickness="{Binding GanttChartView.SummaryBarStrokeThickness}" Width="{Binding GanttChartView.BarHeight}" Stretch="Fill"
                                     Points="1,0 1,0.5 0.5,0.8 0,0.5 0,0"/>
                        </Grid>
                        <pdgcc:TaskExpander/>
                    </Grid>
                </DataTemplate>
            </pdgcc:GanttChartDataGrid.SummaryTaskTemplate>
            <pdgcc:GanttChartDataGrid.Items>
                <!-- Use a custom item that inherits from GanttChartItem (see code behind). -->
                <!-- Some item properties are set in code behind. -->
                <local:CustomGanttChartItem Content="Task 1"/>
                <local:CustomGanttChartItem Content="Task 1.1" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 1.2" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2"/>
                <local:CustomGanttChartItem Content="Task 2.1" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2.2" Indentation="1"/>
                <local:CustomGanttChartItem Content="Task 2.2.1" Indentation="2"/>
                <local:CustomGanttChartItem Content="Task 2.2.2" Indentation="2"/>
            </pdgcc:GanttChartDataGrid.Items>
        </pdgcc:GanttChartDataGrid>
    </DockPanel>
</Window>
